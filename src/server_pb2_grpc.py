# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import server_pb2 as server__pb2


class CommunicationServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ping = channel.unary_unary(
        '/CommunicationService/ping',
        request_serializer=server__pb2.LeaderRequest.SerializeToString,
        response_deserializer=server__pb2.BoolResponse.FromString,
        )
    self.getClientStatus = channel.unary_unary(
        '/CommunicationService/getClientStatus',
        request_serializer=server__pb2.ReplicationRequest.SerializeToString,
        response_deserializer=server__pb2.ClientResponse.FromString,
        )
    self.setLeader = channel.unary_unary(
        '/CommunicationService/setLeader',
        request_serializer=server__pb2.ReplicationRequest.SerializeToString,
        response_deserializer=server__pb2.BoolResponse.FromString,
        )
    self.requestVote = channel.unary_unary(
        '/CommunicationService/requestVote',
        request_serializer=server__pb2.ReplicationRequest.SerializeToString,
        response_deserializer=server__pb2.BoolResponse.FromString,
        )
    self.setNodeState = channel.unary_unary(
        '/CommunicationService/setNodeState',
        request_serializer=server__pb2.NodeState.SerializeToString,
        response_deserializer=server__pb2.BoolResponse.FromString,
        )
    self.getLeaderNode = channel.unary_unary(
        '/CommunicationService/getLeaderNode',
        request_serializer=server__pb2.ReplicationRequest.SerializeToString,
        response_deserializer=server__pb2.ReplicationRequest.FromString,
        )
    self.PutHandler = channel.stream_unary(
        '/CommunicationService/PutHandler',
        request_serializer=server__pb2.Request.SerializeToString,
        response_deserializer=server__pb2.Response.FromString,
        )
    self.GetHandler = channel.unary_stream(
        '/CommunicationService/GetHandler',
        request_serializer=server__pb2.Request.SerializeToString,
        response_deserializer=server__pb2.Response.FromString,
        )
    self.GetFromLocalCluster = channel.unary_stream(
        '/CommunicationService/GetFromLocalCluster',
        request_serializer=server__pb2.Request.SerializeToString,
        response_deserializer=server__pb2.Response.FromString,
        )
    self.Ping = channel.unary_unary(
        '/CommunicationService/Ping',
        request_serializer=server__pb2.Request.SerializeToString,
        response_deserializer=server__pb2.Response.FromString,
        )


class CommunicationServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getClientStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setLeader(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def requestVote(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setNodeState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getLeaderNode(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PutHandler(self, request_iterator, context):
    """interface, for inter-intra cluster communication
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetHandler(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFromLocalCluster(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CommunicationServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ping': grpc.unary_unary_rpc_method_handler(
          servicer.ping,
          request_deserializer=server__pb2.LeaderRequest.FromString,
          response_serializer=server__pb2.BoolResponse.SerializeToString,
      ),
      'getClientStatus': grpc.unary_unary_rpc_method_handler(
          servicer.getClientStatus,
          request_deserializer=server__pb2.ReplicationRequest.FromString,
          response_serializer=server__pb2.ClientResponse.SerializeToString,
      ),
      'setLeader': grpc.unary_unary_rpc_method_handler(
          servicer.setLeader,
          request_deserializer=server__pb2.ReplicationRequest.FromString,
          response_serializer=server__pb2.BoolResponse.SerializeToString,
      ),
      'requestVote': grpc.unary_unary_rpc_method_handler(
          servicer.requestVote,
          request_deserializer=server__pb2.ReplicationRequest.FromString,
          response_serializer=server__pb2.BoolResponse.SerializeToString,
      ),
      'setNodeState': grpc.unary_unary_rpc_method_handler(
          servicer.setNodeState,
          request_deserializer=server__pb2.NodeState.FromString,
          response_serializer=server__pb2.BoolResponse.SerializeToString,
      ),
      'getLeaderNode': grpc.unary_unary_rpc_method_handler(
          servicer.getLeaderNode,
          request_deserializer=server__pb2.ReplicationRequest.FromString,
          response_serializer=server__pb2.ReplicationRequest.SerializeToString,
      ),
      'PutHandler': grpc.stream_unary_rpc_method_handler(
          servicer.PutHandler,
          request_deserializer=server__pb2.Request.FromString,
          response_serializer=server__pb2.Response.SerializeToString,
      ),
      'GetHandler': grpc.unary_stream_rpc_method_handler(
          servicer.GetHandler,
          request_deserializer=server__pb2.Request.FromString,
          response_serializer=server__pb2.Response.SerializeToString,
      ),
      'GetFromLocalCluster': grpc.unary_stream_rpc_method_handler(
          servicer.GetFromLocalCluster,
          request_deserializer=server__pb2.Request.FromString,
          response_serializer=server__pb2.Response.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=server__pb2.Request.FromString,
          response_serializer=server__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CommunicationService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
